---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: clusters.lke.linode.upbound.io
spec:
  group: lke.linode.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - linode
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Manages a Linode
          instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  controlPlane:
                    description: Defines settings for the Kubernetes Control Plane.
                    items:
                      properties:
                        highAvailability:
                          description: Defines whether High Availability is enabled
                            for the cluster Control Plane. This is an irreversible
                            change. Defines whether High Availability is enabled for
                            the Control Plane Components of the cluster.
                          type: boolean
                      type: object
                    type: array
                  k8sVersion:
                    description: The desired Kubernetes version for this Kubernetes
                      cluster in the format of major.minor (e.g. 1.21), and the latest
                      supported patch version will be deployed. The desired Kubernetes
                      version for this Kubernetes cluster in the format of <major>.<minor>.
                      The latest supported patch version will be deployed.
                    type: string
                  label:
                    description: This Kubernetes cluster's unique label. The unique
                      label for the cluster.
                    type: string
                  pool:
                    description: 'Additional nested attributes: A node pool in the
                      cluster.'
                    items:
                      properties:
                        autoscaler:
                          description: When specified, the number of nodes autoscales
                            within the defined minimum and maximum values.
                          items:
                            properties:
                              max:
                                description: The maximum number of nodes to autoscale
                                  to. The maximum number of nodes to autoscale to.
                                type: number
                              min:
                                description: The minimum number of nodes to autoscale
                                  to. The minimum number of nodes to autoscale to.
                                type: number
                            required:
                            - max
                            - min
                            type: object
                          type: array
                        count:
                          description: The number of nodes in the Node Pool. The number
                            of nodes in the Node Pool.
                          type: number
                        type:
                          description: A Linode Type for all of the nodes in the Node
                            Pool. See all node types here. A Linode Type for all of
                            the nodes in the Node Pool.
                          type: string
                      required:
                      - count
                      - type
                      type: object
                    type: array
                  region:
                    description: This Kubernetes cluster's location. This cluster's
                      location.
                    type: string
                  tags:
                    description: An array of tags applied to the Kubernetes cluster.
                      Tags are for organizational purposes only. An array of tags
                      applied to this object. Tags are for organizational purposes
                      only.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: k8sVersion is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.k8sVersion)
            - message: label is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.label)
            - message: pool is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.pool)
            - message: region is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.region)
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  apiEndpoints:
                    description: The endpoints for the Kubernetes API server. The
                      API endpoints for the cluster.
                    items:
                      type: string
                    type: array
                  controlPlane:
                    description: Defines settings for the Kubernetes Control Plane.
                    items:
                      properties:
                        highAvailability:
                          description: Defines whether High Availability is enabled
                            for the cluster Control Plane. This is an irreversible
                            change. Defines whether High Availability is enabled for
                            the Control Plane Components of the cluster.
                          type: boolean
                      type: object
                    type: array
                  dashboardUrl:
                    description: The Kubernetes Dashboard access URL for this cluster.
                      The dashboard URL of the cluster.
                    type: string
                  id:
                    description: The ID of the cluster.
                    type: string
                  k8sVersion:
                    description: The desired Kubernetes version for this Kubernetes
                      cluster in the format of major.minor (e.g. 1.21), and the latest
                      supported patch version will be deployed. The desired Kubernetes
                      version for this Kubernetes cluster in the format of <major>.<minor>.
                      The latest supported patch version will be deployed.
                    type: string
                  label:
                    description: This Kubernetes cluster's unique label. The unique
                      label for the cluster.
                    type: string
                  pool:
                    description: 'Additional nested attributes: A node pool in the
                      cluster.'
                    items:
                      properties:
                        autoscaler:
                          description: When specified, the number of nodes autoscales
                            within the defined minimum and maximum values.
                          items:
                            properties:
                              max:
                                description: The maximum number of nodes to autoscale
                                  to. The maximum number of nodes to autoscale to.
                                type: number
                              min:
                                description: The minimum number of nodes to autoscale
                                  to. The minimum number of nodes to autoscale to.
                                type: number
                            type: object
                          type: array
                        count:
                          description: The number of nodes in the Node Pool. The number
                            of nodes in the Node Pool.
                          type: number
                        id:
                          description: The ID of the cluster. The ID of the Node Pool.
                          type: number
                        nodes:
                          description: The nodes in the node pool.
                          items:
                            properties:
                              id:
                                description: The ID of the cluster.
                                type: string
                              instanceId:
                                description: The ID of the underlying Linode instance.
                                type: number
                              status:
                                description: The status of the cluster.
                                type: string
                            type: object
                          type: array
                        type:
                          description: A Linode Type for all of the nodes in the Node
                            Pool. See all node types here. A Linode Type for all of
                            the nodes in the Node Pool.
                          type: string
                      type: object
                    type: array
                  region:
                    description: This Kubernetes cluster's location. This cluster's
                      location.
                    type: string
                  status:
                    description: The status of the cluster. The status of the cluster.
                    type: string
                  tags:
                    description: An array of tags applied to the Kubernetes cluster.
                      Tags are for organizational purposes only. An array of tags
                      applied to this object. Tags are for organizational purposes
                      only.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
